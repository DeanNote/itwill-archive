package method;

public class Stu_Ex {

	public static void main(String[] args) {
		/*
		 * 메서드(Method)
		 * - 동작(작업)의 최소단위(=작업을 수행하는 코드들의 모음)
		 *   ex)"밥먹다"의 기능을 메서드로 표현(밥을 떠서 입에 넣고 씹기 등)
		 * - 메서드는 반드시 호출되어야만 실행 될 수 있음
		 * 	 => 호출하는 메서드 : Caller, 호출당하는 메서드 : Worker
		 * - 메서드 호출 시 메서드에 전달하는 값을 전달인자(Argument)라고 하며,
		 * 	 이 전달 인자를 전달받아 저장하는 변수 매개변수(Parameter)라고 함.
		 *   => 파라미터 있을 수도 있고 없을 수도 있음.
		 * 
		 * <메서드 정의 기본 문법>
		 * [접근제한자] 리턴타입 메서드명([매개변수선언..]){
		 * 	//메서드 호출 시 수행할 코드들...
		 * 	//[return[리턴값];]
		 * }
		 * 
		 * <메서드 형태 4가지>
		 * 1. 파라미터도 없고, 리턴값도 없는 메서드
		 * 2. 파라미터는 없고, 리턴값은 있는 메서드
		 * 3. 파라미터만 있고, 리턴값은 없는 메서드
		 * 4. 파라미터도 있고, 리턴값도 있는 메서드
		 * 
		 * 
		 */

	}// main() 메서드 끝
	/*
	 * <메서드 정의 기본 문법>
	 * [접근제한자] 리턴타입 메서드명([매개변수선언..]){
	 * 	//메서드 호출 시 수행할 코드들...
	 * 	//[return[리턴값];]
	 * 
	 * ----------------------------------------------------------
	 * 1. 파라미터(매게변수) 없고, 리턴값도 없는 메서드 정의
	 * => 메서드 파라미터가 없으므로 선언부 소괄호()안에 아무것도 명시하지 않음
	 * => 리턴값이 없으므로 리턴타입 부분에 특수한 데이터타입 void 타입을 명시
	 * 	  (void = 리턴값이 없다는 의미)
	 * 
	 */
	public static void sister_1() {
		// sister_1 메서드가 호출됐을 때 수행할 작업들을 기술
		System.out.println("동생 : 오빠가 불을 끄라고 해서 불을 껐다!");
	}

}// Ex 클래스 끝
